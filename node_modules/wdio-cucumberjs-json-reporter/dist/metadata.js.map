{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../src/metadata.ts"],"names":[],"mappings":"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","sourcesContent":["import { browser } from '@wdio/globals'\n\nimport { NOT_KNOWN } from './constants.js'\nimport type { AppData, BrowserData, MetadataObject, cjson_metadata } from './types'\nimport type { DesiredCapabilitiesExtended, RunnerStatsExtended, W3CCapabilitiesExtended, WebdriverIOExtended } from './types/wdio'\nimport { Capabilities } from '@wdio/types'\n\nexport class Metadata {\n    /**\n     * Determine the metadata that needs to be added\n     */\n    public determineMetadata(data: RunnerStatsExtended): MetadataObject {\n        let instanceData: AppData | BrowserData\n        const currentCapabilities = data.capabilities as Capabilities.Capabilities\n        const optsCaps = browser.options.capabilities as W3CCapabilitiesExtended\n        const currentConfigCapabilities = data?.capabilities as DesiredCapabilitiesExtended\n        const w3cCaps: cjson_metadata = (data.config.capabilities)\n            ? Object.prototype.hasOwnProperty.call(data.config.capabilities, 'cjson:metadata')\n                // Fixes: https://github.com/webdriverio-community/wdio-cucumberjs-json-reporter/issues/73\n                ? data.config.capabilities['cjson:metadata'] as cjson_metadata\n                // Fallback\n                : (browser.options as WebdriverIOExtended)?.requestedCapabilities?.cjson_metadata\n            : {}\n        const metadata: cjson_metadata = (currentConfigCapabilities as W3CCapabilitiesExtended)?.cjson_metadata\n            || w3cCaps // When an app is used to test\n            || (optsCaps as DesiredCapabilitiesExtended)?.cjson_metadata // devtools\n            || {} as cjson_metadata\n\n        // When an app is used to test\n        if (currentConfigCapabilities?.app || metadata?.app) {\n            instanceData = this.determineAppData(currentConfigCapabilities, metadata)\n        } else {\n            // Then a browser\n            instanceData = this.determineBrowserData(currentCapabilities, currentConfigCapabilities, metadata)\n        }\n\n        return <MetadataObject>{\n            ...instanceData,\n            device: this.determineDeviceName(metadata, currentConfigCapabilities),\n            platform: {\n                name: this.determinePlatformName(metadata, currentCapabilities),\n                version: this.determinePlatformVersion(metadata, currentCapabilities),\n            },\n        }\n    }\n\n    /**\n     * Determine the device name\n     */\n    public determineDeviceName(metadata: cjson_metadata, currentConfigCapabilities: WebDriver.DesiredCapabilities): string {\n        return (metadata?.device || currentConfigCapabilities?.deviceName || `Device name ${NOT_KNOWN}`)\n    }\n\n    /**\n     * Determine the platform name\n     */\n    public determinePlatformName(metadata: cjson_metadata, currentCapabilities: WebDriver.DesiredCapabilities): string {\n        const currentPlatformName = currentCapabilities?.platformName\n            ? currentCapabilities?.platformName.includes('mac')\n                ? 'osx'\n                : currentCapabilities.platformName.includes('windows')\n                    ? 'windows'\n                    : currentCapabilities?.platformName\n            : `Platform name ${NOT_KNOWN}`\n        return (metadata.platform && metadata?.platform?.name)\n            ? metadata.platform?.name\n            : currentPlatformName\n    }\n\n    /**\n     * Determine the platform version\n     */\n    public determinePlatformVersion(metadata: cjson_metadata, currentCapabilities?: Capabilities.Capabilities): string {\n        if (metadata && metadata.platform && metadata.platform?.version) {\n            return metadata.platform.version\n        }\n        if (currentCapabilities?.['appium:platformVersion']) {\n            return currentCapabilities?.['appium:platformVersion']\n        }\n        return `Version ${NOT_KNOWN}`\n    }\n\n    /**\n     * Determine the app data\n     */\n    public determineAppData(currentConfigCapabilities: DesiredCapabilitiesExtended, metadata: cjson_metadata): AppData {\n        const metaAppName: string = (metadata?.app && metadata.app?.name) ? metadata?.app?.name : 'No metadata.app.name available'\n        const metaAppVersion: string = (metadata?.app && metadata.app.version) ? metadata.app.version : 'No metadata.app.version available'\n        const appPath = currentConfigCapabilities.app || metaAppName\n        const appName = appPath.substring(appPath.replace('\\\\', '/').lastIndexOf('/')).replace('/', '')\n\n        return {\n            app: {\n                name: appName,\n                version: metaAppVersion,\n            },\n        }\n    }\n\n    /**\n     * Determine the browser data\n     */\n    public determineBrowserData(currentCapabilities: Capabilities.DesiredCapabilities, currentConfigCapabilities: WebDriver.DesiredCapabilities, metadata: cjson_metadata): BrowserData {\n        const browserName = currentCapabilities?.browserName\n            || currentConfigCapabilities?.browserName\n            || ((metadata && metadata?.browser && metadata.browser?.name) ? metadata?.browser?.name : 'No metadata.browser.name available')\n        const browserVersion = currentCapabilities?.version\n            || currentCapabilities?.browserVersion\n            || currentConfigCapabilities?.browserVersion\n            || ((metadata && metadata?.browser && metadata?.browser?.version) ? metadata?.browser?.version : 'No metadata.browser.version available')\n\n        return <BrowserData>{\n            browser: {\n                name: browserName,\n                version: browserVersion,\n            }\n        }\n    }\n}\n"]}